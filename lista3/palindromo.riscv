.data
input: .space 1024
nl: .string "\n"

.text
main:
li a7, 5 #ler int N
ecall
addi t0, a0, 0 #carregar n em t0

la a0, input # alocar espaço no endereço a0
addi a1, t0, 1 #incrementar t0 em 1 e alocar em a1
li a7, 8 #ler string
ecall

la t1, input #alocar espaço em t1
add t2, t1, t0 #soma t1 com t0
addi t2, t2, -1 #decrementa t2

check_palindrome:
#função para verificar se é palindromo, compara bit a bit, incrementa t1 e decrementa t2 enquanto for igual
lb t3, 0(t1) 
lb t4, 0(t2)
bne t3, t4, not_palindrome #se for diferente branch vai para não é palindromo

#incremento e decremento de t1 e t2 respectivamente
addi t1, t1, 1 
addi t2, t2, -1
#volta para o inicio enquanto for igual
blt t1, t2, check_palindrome

li a0, 1 # salva o valor 1 (return 1) se for palindromo

j print_result #jump para a função de print result

not_palindrome:
li a0, 0 #se não for plindromo encerrar com 0

print_result:
li a7, 1 #ler inteiro 1 ou 0 para encerrar programa
ecall

la a0, nl #quebra de linha
li a7,4 #print 1 ou 0
ecall

